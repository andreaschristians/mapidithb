{"version":3,"file":"react-map-gl.cjs.js","sources":["../src/components/MapContext/index.js","../src/utils/mapbox-gl.js","../src/components/MapGL/events.js","../src/utils/diff.js","../src/utils/queryRenderedFeatures.js","../src/components/Layer/index.js","../src/components/CustomLayer/index.js","../src/utils/normalizeChildren.js","../src/utils/capitalizeFirstLetter.js","../src/components/MapGL/index.js","../src/utils/validateSource.js","../src/components/Source/index.js","../src/components/Popup/index.js","../src/components/Marker/index.js","../src/components/FeatureState/index.js","../src/components/AttributionControl/index.js","../src/components/FullscreenControl/index.js","../src/components/GeolocateControl/index.js","../src/components/NavigationControl/index.js","../src/components/ScaleControl/index.js","../node_modules/@mapbox/mapbox-gl-language/index.js","../src/components/LanguageControl/index.js"],"sourcesContent":["// @flow\n\nimport { createContext } from 'react';\nimport type { Context } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst MapContext: Context<?MapboxMap> = createContext(null);\n\nexport default MapContext;\n","// @flow\nimport type MapboxGL from 'mapbox-gl/src/index';\n\nconst isBrowser = !(\n  Object.prototype.toString.call(global.process) === '[object process]' &&\n  !global.process.browser\n);\n\n// $FlowFixMe\nconst mapboxgl: MapboxGL = isBrowser ? require('mapbox-gl') : null;\n\nexport default mapboxgl;\n","// @flow\n\nconst events = [\n  'resize',\n  'remove',\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mousemove',\n  'click',\n  'dblclick',\n  'mouseenter',\n  'mouseleave',\n  'mouseout',\n  'contextmenu',\n  'touchstart',\n  'touchend',\n  'touchmove',\n  'touchcancel',\n  'movestart',\n  'move',\n  'moveend',\n  'dragstart',\n  'drag',\n  'dragend',\n  'zoomstart',\n  'zoom',\n  'zoomend',\n  'rotatestart',\n  'rotate',\n  'rotateend',\n  'pitchstart',\n  'pitch',\n  'pitchend',\n  'boxzoomstart',\n  'boxzoomend',\n  'boxzoomcancel',\n  'webglcontextlost',\n  'webglcontextrestored',\n  'load',\n  'error',\n  'data',\n  'styledata',\n  'sourcedata',\n  'dataloading',\n  'styledataloading',\n  'sourcedataloading'\n];\n\nmodule.exports = events;\n","// @flow\n\ntype KV = {\n  [string]: any\n};\n\nconst diff = (newProps: KV = {}, prevProps: KV = {}) => {\n  const keys = new Set([...Object.keys(newProps), ...Object.keys(prevProps)]);\n  return [...keys].reduce((acc, key: string) => {\n    const value = newProps[key];\n    if (value !== prevProps[key]) {\n      acc.push([key, value]);\n    }\n    return acc;\n  }, []);\n};\n\nexport default diff;\n","// @flow\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nconst queryRenderedFeatures = (\n  map: MapboxMap,\n  layerId: string,\n  position: [number, number],\n  radius: number\n) => {\n  const parameters = { layers: [layerId] };\n\n  if (radius) {\n    const bbox = [\n      [position[0] - radius, position[1] - radius],\n      [position[0] + radius, position[1] + radius]\n    ];\n\n    return map.queryRenderedFeatures(bbox, parameters);\n  }\n\n  return map.queryRenderedFeatures(position, parameters);\n};\n\nexport default queryRenderedFeatures;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { LayerSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport diff from '../../utils/diff';\nimport queryRenderedFeatures from '../../utils/queryRenderedFeatures';\n\nconst eventListeners = [\n  ['onClick', 'click'],\n  ['onHover', 'mousemove'],\n  ['onEnter', 'mouseenter'],\n  ['onLeave', 'mouseleave']\n];\n\ntype Props = {|\n  /** Mapbox GL Layer id */\n  id: string,\n\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /**\n   * Called when the layer is clicked.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onClick?: (event: { features?: [], ...MapMouseEvent }) => any,\n\n  /**\n   * Called when the layer is hovered over.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onHover?: (event: { features?: [], ...MapMouseEvent }) => any,\n\n  /**\n   * Called when the layer feature is entered.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onEnter?: (event: { features?: [], ...MapMouseEvent }) => any,\n\n  /**\n   * Called when the layer feature is leaved.\n   * @callback\n   * @param {Object} event - The mouse event.\n   * @param {[Number, Number]} event.lngLat - The coordinates of the pointer\n   * @param {Array} event.features - The features under the pointer,\n   * using Mapbox's queryRenderedFeatures API:\n   * https://www.mapbox.com/mapbox-gl-js/api/#Map#queryRenderedFeatures\n   */\n  onLeave?: (event: { features?: [], ...MapMouseEvent }) => any,\n\n  /**\n   * Radius to detect features around a clicked/hovered point\n   */\n  radius: number,\n\n  ...LayerSpecification\n|};\n\nclass Layer extends PureComponent<Props> {\n  $key: string;\n\n  $value: any;\n\n  _id: string;\n\n  _map: MapboxMap;\n\n  _onClick: (event: MapMouseEvent | MapTouchEvent) => void;\n\n  _onHover: (event: MapMouseEvent) => void;\n\n  _onEnter: (event: MapMouseEvent) => void;\n\n  _onLeave: (event: MapMouseEvent) => void;\n\n  static displayName = 'Layer';\n\n  static defaultProps = {\n    radius: 0\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._id = props.id;\n  }\n\n  componentDidMount() {\n    const map = this._map;\n    const {\n      before,\n      radius,\n      onClick,\n      onHover,\n      onEnter,\n      onLeave,\n      ...layer\n    } = this.props;\n\n    if (before && map.getLayer(before)) {\n      map.addLayer(layer, before);\n    } else {\n      map.addLayer(layer);\n    }\n\n    if (onClick) {\n      map.on('click', this._id, this._onClick);\n    }\n\n    if (onHover) {\n      map.on('mousemove', this._id, this._onHover);\n    }\n\n    if (onEnter) {\n      map.on('mouseenter', this._id, this._onEnter);\n    }\n\n    if (onLeave) {\n      map.on('mouseleave', this._id, this._onLeave);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { before, onClick, ...layer } = this.props;\n\n    if (before !== prevProps.before) {\n      map.moveLayer(layer.id, before);\n    }\n\n    if (layer.paint !== prevProps.paint) {\n      diff(layer.paint, prevProps.paint).forEach(([key, value]) => {\n        map.setPaintProperty(this._id, key, value);\n      });\n    }\n\n    if (layer.layout !== prevProps.layout) {\n      diff(layer.layout, prevProps.layout).forEach(([key, value]) => {\n        map.setLayoutProperty(this._id, key, value);\n      });\n    }\n\n    // $FlowFixMe\n    if (layer.filter !== prevProps.filter) {\n      if (!layer.filter) {\n        map.setFilter(this._id, undefined);\n      } else {\n        map.setFilter(this._id, layer.filter);\n      }\n    }\n\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n\n      if (!this.props[propName] && prevProps[propName]) {\n        map.off(eventName, this._id, this[handlerName]);\n      }\n\n      if (this.props[propName] && !prevProps[propName]) {\n        map.on(eventName, this._id, this[handlerName]);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.getLayer(this._id)) {\n      return;\n    }\n\n    eventListeners.forEach(([propName, eventName]) => {\n      const handlerName = `_${propName}`;\n      if (this.props[propName]) {\n        this._map.off(eventName, this._id, this[handlerName]);\n      }\n    });\n\n    this._map.removeLayer(this._id);\n  }\n\n  _onClick = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onClick({ ...event, features });\n  };\n\n  _onHover = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onHover({ ...event, features });\n  };\n\n  _onEnter = (event: MapMouseEvent): void => {\n    const position = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onEnter({ ...event, features });\n  };\n\n  _onLeave = (event: MapMouseEvent) => {\n    const position: [number, number] = [event.point.x, event.point.y];\n    const features = queryRenderedFeatures(\n      this._map,\n      this._id,\n      position,\n      this.props.radius\n    );\n\n    // $FlowFixMe\n    this.props.onLeave({ ...event, features });\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default Layer;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { CustomLayerInterface } from 'mapbox-gl/src/style/style_layer/custom_style_layer';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** The id of an existing layer to insert the new layer before. */\n  before?: string,\n\n  /** Mapbox GL Custom Layer instance */\n  layer: CustomLayerInterface\n};\n\n/**\n * Custom layers allow a user to render directly into the map's GL context\n * using the map's camera.\n */\nclass CustomLayer extends PureComponent<Props> {\n  _id: string;\n\n  _map: MapboxMap;\n\n  static displayName = 'CustomLayer';\n\n  componentDidMount() {\n    const { layer, before } = this.props;\n\n    if (before && this._map.getLayer(before)) {\n      this._map.addLayer(layer, before);\n    } else {\n      this._map.addLayer(layer);\n    }\n\n    this._id = layer.id;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle() || !this._map.getLayer(this._id)) {\n      return;\n    }\n\n    this._map.removeLayer(this._id);\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default CustomLayer;\n","// @flow\n\nimport { Children, cloneElement } from 'react';\nimport type { Node, Element } from 'react';\n\nimport Layer from '../components/Layer';\nimport CustomLayer from '../components/CustomLayer';\n\nconst getLayerId = (child: Element<typeof Layer | typeof CustomLayer>) => {\n  // $FlowFixMe\n  return child.type === CustomLayer ? child.props.layer.id : child.props.id;\n};\n\nconst normalizeChildren = (children: Node) => {\n  const results = Children.toArray(children)\n    .filter(Boolean)\n    .reduce(\n      (acc, child, index) => {\n        const { previousLayerIndex } = acc;\n\n        if (child.type === Layer || child.type === CustomLayer) {\n          if (previousLayerIndex) {\n            const currentLayerId = getLayerId(child);\n            const previousLayer = acc.children[previousLayerIndex];\n            const before = previousLayer.props.before || currentLayerId;\n            const previousLayerWithBefore = cloneElement(previousLayer, {\n              before\n            });\n\n            acc.children[previousLayerIndex] = previousLayerWithBefore;\n          }\n\n          acc.previousLayerIndex = index;\n        }\n\n        acc.children.push(child);\n        return acc;\n      },\n      { children: [], previousLayerIndex: undefined }\n    );\n\n  return results.children;\n};\n\nexport default normalizeChildren;\n","// @flow\n\nfunction capitalizeFirstLetter(string: string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nmodule.exports = capitalizeFirstLetter;\n","// @flow\n\nimport { PureComponent, createElement, createRef } from 'react';\nimport type { Node, ElementRef } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\nimport type { AnimationOptions } from 'mapbox-gl/src/ui/camera';\nimport type { StyleSpecification } from 'mapbox-gl/src/style-spec/types';\nimport type { MapMouseEvent, MapTouchEvent } from 'mapbox-gl/src/ui/events';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\nimport events from './events';\nimport normalizeChildren from '../../utils/normalizeChildren';\nimport capitalizeFirstLetter from '../../utils/capitalizeFirstLetter';\nimport type { EventProps } from './eventProps';\n\nexport type Viewport = {|\n  latitude: number,\n  longitude: number,\n  zoom: number,\n  pitch?: number,\n  bearing?: number\n|};\n\nexport const jumpTo = 'jumpTo';\nexport const easeTo = 'easeTo';\nexport const flyTo = 'flyTo';\n\nexport type ViewportChangeMethod = 'jumpTo' | 'easeTo' | 'flyTo';\nexport type ViewportChangeEvent = MapMouseEvent | MapTouchEvent;\n\ntype Props = EventProps & {\n  /** container className */\n  className?: string,\n\n  /** container style */\n  style?: Object,\n\n  /**\n   * The Mapbox style. A string url or a Mapbox GL style object.\n   */\n  mapStyle: string | StyleSpecification,\n\n  /** Sources and Layers */\n  children?: Node,\n\n  /**\n   * Mapbox API access token for mapbox-gl-js.\n   * Required when using Mapbox vector tiles/styles.\n   */\n  accessToken?: string,\n\n  /** The longitude of the center of the map. */\n  longitude: number,\n\n  /** The latitude of the center of the map. */\n  latitude: number,\n\n  /** The tile zoom level of the map. */\n  zoom: number,\n\n  /** Specify the bearing of the viewport */\n  bearing?: number,\n\n  /** Specify the pitch of the viewport */\n  pitch?: number,\n\n  /** The minimum zoom level of the map (0-22). */\n  minZoom?: number,\n\n  /** The maximum zoom level of the map (0-22). */\n  maxZoom?: number,\n\n  /**\n   * If `true`, the map's position (zoom, center latitude,\n   * center longitude, bearing, and pitch) will be synced\n   * with the hash fragment of the page's URL. For example,\n   * http://path/to/my/page.html#2.59/39.26/53.07/-24.1/60.\n   */\n  hash?: boolean,\n\n  /**\n   * The threshold, measured in degrees, that determines when\n   * the map's bearing (rotation) will snap to north. For\n   * example, with a  bearingSnap of 7, if the user rotates the\n   * map within 7 degrees of north, the map will automatically\n   * snap to exact north.\n   */\n  bearingSnap?: number,\n\n  /**\n   * If `false`, the map's pitch (tilt) control with \"drag to\n   * rotate\" interaction will be disabled.\n   */\n  pitchWithRotate?: boolean,\n\n  /** If `true`, an AttributionControl will be added to the map. */\n  attributionControl?: boolean,\n\n  /* A string representing the position of the Mapbox wordmark on the map. */\n  logoPosition?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * If `true`, map creation will fail if the performance of Mapbox\n   * GL JS would be dramatically worse than expected (i.e. a software\n   * renderer would be used).\n   */\n  failIfMajorPerformanceCaveat?: boolean,\n\n  /**\n   * Mapbox WebGL context creation option.\n   * Useful when you want to export the canvas as a PNG.\n   */\n  preserveDrawingBuffer?: boolean,\n\n  /**\n   * If `false`, the map won't attempt to re-request tiles once they\n   * expire per their HTTP `cacheControl`/`expires` headers.\n   */\n  refreshExpiredTiles?: boolean,\n\n  /** If set, the map will be constrained to the given bounds. */\n  maxBounds?: MapboxLngLatBoundsLike,\n\n  /** If `true`, the \"scroll to zoom\" interaction is enabled. */\n  scrollZoom?: boolean | Object,\n\n  /** If `true`, the \"box zoom\" interaction is enabled */\n  boxZoom?: boolean,\n\n  /** If `true`, the \"drag to rotate\" interaction is enabled */\n  dragRotate?: boolean,\n\n  /** If `true`, the \"drag to pan\" interaction is enabled */\n  dragPan?: boolean,\n\n  /** If `true`, keyboard shortcuts are enabled */\n  keyboard?: boolean,\n\n  /** If `true`, the \"double click to zoom\" interaction is enabled */\n  doubleClickZoom?: boolean,\n\n  /**\n   * If `true`, the map will automatically resize\n   * when the browser window resizes.\n   */\n  trackResize?: boolean,\n\n  /**\n   * The maxiumum number of tiles stored in the tile cache for a given\n   * source. If omitted, the cache will be dynamically sized based on\n   * the current viewport.\n   */\n  maxTileCacheSize?: number,\n\n  /**\n   * If `true`, multiple copies of the world\n   * will be rendered, when zoomed out\n   */\n  renderWorldCopies?: boolean,\n\n  /**\n   * If specified, defines a CSS font-family for locally overriding\n   * generation of glyphs in the 'CJK Unified Ideographs' and\n   * 'Hangul Syllables' ranges. In these ranges, font settings from the\n   * map's style will be ignored, except for font-weight keywords\n   * (light/regular/medium/bold). The purpose of this option is to avoid\n   * bandwidth-intensive glyph server requests.\n   * (see https://www.mapbox.com/mapbox-gl-js/example/local-ideographs )\n   */\n  localIdeographFontFamily?: boolean,\n\n  /**\n   * A callback run before the Map makes a request for an external URL.\n   * The callback can be used to modify the url, set headers, or set the\n   * credentials property for cross-origin requests. Expected to return\n   * an object with a  url property and optionally  headers and\n   * credentials properties.\n   */\n  transformRequest?: (\n    url: string,\n    resourceType: string\n  ) => { url: string, headers?: Object, credentials?: string },\n\n  /**\n   * If true, Resource Timing API information will be collected for\n   * requests made by GeoJSON and Vector Tile web workers (this information\n   * is normally inaccessible from the main Javascript thread). Information\n   * will be returned in a resourceTiming property of relevant data events.\n   */\n  collectResourceTiming?: boolean,\n\n  /**\n   * `onViewportChange` callback is fired when the user interacted with the\n   * map. The object passed to the callback contains viewport properties\n   * such as `longitude`, `latitude`, `zoom` etc.\n   */\n  onViewportChange?: (viewport: Viewport) => void,\n\n  /**\n   * Map method that will be called after new viewport props are received.\n   */\n  viewportChangeMethod?: ViewportChangeMethod,\n\n  /**\n   * Options common to map movement methods that involve animation,\n   * controlling the duration and easing function of the animation.\n   * This options will be passed to the `viewportChangeMethod` call.\n   * (see https://docs.mapbox.com/mapbox-gl-js/api/#animationoptions)\n   */\n  viewportChangeOptions?: AnimationOptions,\n\n  /** The onLoad callback for the map */\n  onLoad?: Function,\n\n  /** Map cursor style as CSS value */\n  cursorStyle?: string\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass MapGL extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  _container: { current: null | ElementRef<'div'> };\n\n  _onViewportChange: (event: ViewportChangeEvent) => void;\n\n  static displayName = 'MapGL';\n\n  static defaultProps = {\n    children: null,\n    className: null,\n    style: null,\n    mapStyle: 'mapbox://styles/mapbox/light-v8',\n    accessToken: null,\n    bearing: 0,\n    pitch: 0,\n    minZoom: 0,\n    maxZoom: 22,\n    maxBounds: null,\n    hash: false,\n    bearingSnap: 7,\n    pitchWithRotate: true,\n    attributionControl: true,\n    logoPosition: 'bottom-left',\n    failIfMajorPerformanceCaveat: false,\n    preserveDrawingBuffer: false,\n    refreshExpiredTiles: true,\n    boxZoom: true,\n    scrollZoom: true,\n    dragRotate: true,\n    dragPan: true,\n    keyboard: true,\n    doubleClickZoom: true,\n    trackResize: true,\n    renderWorldCopies: true,\n    maxTileCacheSize: null,\n    onViewportChange: null,\n    onLoad: null,\n    localIdeographFontFamily: null,\n    transformRequest: null,\n    collectResourceTiming: false,\n    cursorStyle: null,\n    viewportChangeMethod: jumpTo,\n    viewportChangeOptions: null\n  };\n\n  constructor(props: Props) {\n    super(props);\n\n    if (mapboxgl) {\n      mapboxgl.accessToken = props.accessToken;\n    }\n\n    this._container = createRef();\n  }\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    if (!mapboxgl) {\n      return;\n    }\n\n    const container = this._container.current;\n\n    const map: MapboxMap = new mapboxgl.Map({\n      container,\n      style: this.props.mapStyle,\n      interactive: !!this.props.onViewportChange,\n      center: [this.props.longitude, this.props.latitude],\n      zoom: this.props.zoom,\n      pitch: this.props.pitch,\n      bearing: this.props.bearing,\n      minZoom: this.props.minZoom,\n      maxZoom: this.props.maxZoom,\n      hash: this.props.hash,\n      bearingSnap: this.props.bearingSnap,\n      pitchWithRotate: this.props.pitchWithRotate,\n      attributionControl: this.props.attributionControl,\n      logoPosition: this.props.logoPosition,\n      failIfMajorPerformanceCaveat: this.props.failIfMajorPerformanceCaveat,\n      preserveDrawingBuffer: this.props.preserveDrawingBuffer,\n      refreshExpiredTiles: this.props.refreshExpiredTiles,\n      maxBounds: this.props.maxBounds,\n      scrollZoom: this.props.scrollZoom,\n      boxZoom: this.props.boxZoom,\n      dragRotate: this.props.dragRotate,\n      dragPan: this.props.dragPan,\n      keyboard: this.props.keyboard,\n      doubleClickZoom: this.props.doubleClickZoom,\n      trackResize: this.props.trackResize,\n      renderWorldCopies: this.props.renderWorldCopies,\n      maxTileCacheSize: this.props.maxTileCacheSize,\n      localIdeographFontFamily: this.props.localIdeographFontFamily,\n      transformRequest: this.props.transformRequest,\n      collectResourceTiming: this.props.collectResourceTiming\n    });\n\n    this._map = map;\n\n    map.on('styledata', () => this.setState({ loaded: true }));\n\n    map.once('load', () => {\n      this.setState({ loaded: true }, this.props.onLoad);\n    });\n\n    if (this.props.onViewportChange) {\n      map.on('dragend', this._onViewportChange);\n      map.on('zoomend', this._onViewportChange);\n      map.on('rotateend', this._onViewportChange);\n      map.on('pitchend', this._onViewportChange);\n      map.on('boxzoomend', this._onViewportChange);\n    }\n\n    events.forEach((event) => {\n      const propName = `on${capitalizeFirstLetter(event)}`;\n      if (this.props[propName]) {\n        map.on(event, this.props[propName]);\n      }\n    });\n\n    if (this.props.cursorStyle) {\n      map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    this._updateMapViewport(prevProps, this.props);\n    this._updateMapStyle(prevProps, this.props);\n\n    if (!prevProps.cursorStyle !== this.props.cursorStyle) {\n      this._map.getCanvas().style.cursor = this.props.cursorStyle;\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._map) {\n      this._map.remove();\n    }\n  }\n\n  // External apps can access map this way\n  getMap() {\n    return this._map;\n  }\n\n  /**\n   * Update Map style from newProps\n   *\n   * @private\n   * @param {Props} prevProps\n   * @param {Props} newProps\n   */\n  _updateMapStyle(prevProps: Props, newProps: Props): void {\n    const newMapStyle = newProps.mapStyle;\n    const prevMapStyle = prevProps.mapStyle;\n\n    if (newMapStyle !== prevMapStyle) {\n      this.setState({ loaded: false }, () => this._map.setStyle(newMapStyle));\n    }\n  }\n\n  /**\n   * Update Map viewport from newProps\n   *\n   * @private\n   * @param {Props} newProps\n   */\n  _updateMapViewport(prevProps: Props, newProps: Props): void {\n    const map: MapboxMap = this._map;\n    const center = map.getCenter();\n\n    const viewportChanged =\n      (newProps.latitude !== prevProps.latitude &&\n        newProps.latitude !== center.lat) ||\n      (newProps.longitude !== prevProps.longitude &&\n        newProps.longitude !== center.lng) ||\n      (newProps.zoom !== prevProps.zoom && newProps.zoom !== map.getZoom()) ||\n      (newProps.pitch !== prevProps.pitch &&\n        newProps.pitch !== map.getPitch()) ||\n      (newProps.bearing !== prevProps.bearing &&\n        newProps.bearing !== map.getBearing());\n\n    if (!viewportChanged) {\n      return;\n    }\n\n    const viewport = {\n      center: [newProps.longitude, newProps.latitude],\n      zoom: newProps.zoom,\n      pitch: newProps.pitch,\n      bearing: newProps.bearing\n    };\n\n    const { viewportChangeMethod, viewportChangeOptions } = this.props;\n    const options = { ...viewportChangeOptions, ...viewport };\n\n    switch (viewportChangeMethod) {\n      case flyTo:\n        map.flyTo(options);\n        break;\n      case jumpTo:\n        map.jumpTo(options);\n        break;\n      case easeTo:\n        map.easeTo(options);\n        break;\n      default:\n        throw new Error('Unknown viewport change method');\n    }\n  }\n\n  /**\n   * fires `onViewportChange` callback when the user interacted with the map.\n   *\n   * @private\n   * @param {ViewportChangeEvent} event\n   */\n  _onViewportChange = (event: ViewportChangeEvent): void => {\n    if (!event.originalEvent) {\n      return;\n    }\n\n    const map = this._map;\n\n    const { lng, lat } = map.getCenter();\n    const zoom = map.getZoom();\n    const pitch = map.getPitch();\n    const bearing = map.getBearing();\n\n    const viewport: Viewport = {\n      latitude: lat,\n      longitude: lng,\n      zoom,\n      pitch,\n      bearing\n    };\n\n    // $FlowFixMe\n    this.props.onViewportChange(viewport);\n  };\n\n  render() {\n    const { loaded } = this.state;\n    const { className, style } = this.props;\n\n    const children = this.props.children\n      ? normalizeChildren(this.props.children)\n      : null;\n\n    return createElement(\n      MapContext.Provider,\n      { value: this._map },\n      createElement(\n        'div',\n        {\n          ref: this._container,\n          style,\n          className\n        },\n        loaded && children\n      )\n    );\n  }\n}\n\nexport default MapGL;\n","// @flow\nimport type { Props } from '../components/Source';\n\nexport default (props: Props) => {\n  switch (props.type) {\n    case 'vector':\n      return { type: 'vector', ...props };\n    case 'raster':\n      return { type: 'raster', ...props };\n    case 'raster-dem':\n      return { type: 'raster-dem', ...props };\n    case 'geojson':\n      return { type: 'geojson', ...props };\n    case 'video':\n      return { type: 'video', ...props };\n    case 'image':\n      return { type: 'image', ...props };\n    default:\n      throw new Error(`Unknown type for '${props.id}' Source`);\n  }\n};\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type { ChildrenArray, Element } from 'react';\nimport type {\n  SourceSpecification,\n  VectorSourceSpecification,\n  GeoJSONSourceSpecification\n} from 'mapbox-gl/src/style-spec/types';\n\nimport MapContext from '../MapContext';\nimport Layer from '../Layer';\nimport validateSource from '../../utils/validateSource';\nimport normalizeChildren from '../../utils/normalizeChildren';\n\nexport type Props = {\n  /** Mapbox GL Source */\n  ...SourceSpecification,\n\n  /** Mapbox GL Source id */\n  id: string,\n\n  /** Layers */\n  children?: ChildrenArray<Element<typeof Layer>>\n};\n\ntype State = {\n  loaded: boolean\n};\n\nclass Source extends PureComponent<Props, State> {\n  _map: MapboxMap;\n\n  static displayName = 'Source';\n\n  state = {\n    loaded: false\n  };\n\n  componentDidMount() {\n    const { id, children, ...source } = validateSource(this.props);\n    this._map.addSource(id, source);\n    this._map.on('sourcedata', this._onSourceData);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {\n      id: prevId,\n      children: prevChildren,\n      ...prevSource\n    } = validateSource(prevProps);\n    const { id, children, ...source } = validateSource(this.props);\n\n    if (id !== prevId || source.type !== prevSource.type) {\n      this._map.removeSource(prevId);\n      this._map.addSource(id, source);\n      return;\n    }\n\n    if (source.type === 'geojson' && prevSource.type === 'geojson') {\n      this._updateGeoJSONSource(id, prevSource, source);\n      return;\n    }\n\n    if (source.type === 'vector' && prevSource.type === 'vector') {\n      this._updateVectorSource(id, prevSource, source);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._removeSource();\n  }\n\n  _onSourceData = () => {\n    if (!this._map.isSourceLoaded(this.props.id)) {\n      return;\n    }\n\n    this._map.off('sourcedata', this._onSourceData);\n    this.setState({ loaded: true });\n  };\n\n  _updateGeoJSONSource = (\n    id: string,\n    prevSource: GeoJSONSourceSpecification,\n    newSource: GeoJSONSourceSpecification\n  ) => {\n    if (newSource.data !== prevSource.data) {\n      this._map.getSource(id).setData(newSource.data);\n    }\n  };\n\n  // https://github.com/mapbox/mapbox-gl-js/pull/8048\n  _updateVectorSource = (\n    id: string,\n    prevSource: VectorSourceSpecification,\n    newSource: VectorSourceSpecification\n  ) => {\n    const source = this._map.getSource(id);\n\n    /* eslint-disable no-underscore-dangle */\n    if (source._tileJSONRequest) {\n      source._tileJSONRequest.cancel();\n    }\n\n    source.url = newSource.url;\n    source.scheme = newSource.scheme;\n    source._options = { ...source._options, ...newSource };\n    /* eslint-enable no-underscore-dangle */\n\n    const sourceCache = this._map.style.sourceCaches[id];\n    if (sourceCache) {\n      sourceCache.clearTiles();\n    }\n\n    source.load();\n  };\n\n  _removeSource = () => {\n    const { id } = this.props;\n    if (this._map.getSource(id)) {\n      const { layers } = this._map.getStyle();\n      if (layers) {\n        layers.forEach((layer) => {\n          if (layer.source === id) {\n            this._map.removeLayer(layer.id);\n          }\n        });\n      }\n\n      this._map.removeSource(id);\n    }\n  };\n\n  render() {\n    const { loaded } = this.state;\n\n    const children = this.props.children\n      ? // $FlowFixMe\n        normalizeChildren(this.props.children)\n      : null;\n\n    return createElement(MapContext.Consumer, {}, (map: ?MapboxMap) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return loaded && children;\n    });\n  }\n}\n\nexport default Source;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxPopup from 'mapbox-gl/src/ui/popup';\nimport type MapboxLngLatBoundsLike from 'mapbox-gl/src/geo/lng_lat_bounds';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Popup content. */\n  children: React$Node,\n\n  /** The longitude of the center of the popup. */\n  longitude: number,\n\n  /** The latitude of the center of the popup. */\n  latitude: number,\n\n  /*\n   * If true, a close button will appear\n   * in the top right corner of the popup.\n   */\n  closeButton?: boolean,\n\n  /** If true, the popup will closed when the map is clicked. */\n  closeOnClick?: boolean,\n\n  /** The onClose callback is fired when the popup closed. */\n  onClose?: Function,\n\n  /*\n   * A string indicating the part of the Popup\n   * that should be positioned closest to the coordinate.\n   * */\n  anchor?:\n    | 'top'\n    | 'bottom'\n    | 'left'\n    | 'right'\n    | 'top-left'\n    | 'top-right'\n    | 'bottom-left'\n    | 'bottom-right',\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: MapboxLngLatBoundsLike\n};\n\nclass Popup extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _popup: MapboxPopup;\n\n  static displayName = 'Popup';\n\n  static defaultProps = {\n    closeButton: true,\n    closeOnClick: true,\n    onClose: null,\n    anchor: null,\n    offset: null\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      offset,\n      closeButton,\n      closeOnClick,\n      onClose,\n      anchor\n    } = this.props;\n\n    this._popup = new mapboxgl.Popup({\n      offset,\n      closeButton,\n      closeOnClick,\n      anchor\n    });\n\n    this._popup.setDOMContent(this._el);\n    this._popup.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onClose) {\n      this._popup.on('close', onClose);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._popup.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._popup.remove();\n  }\n\n  getPopup() {\n    return this._popup;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Popup;\n","// @flow\n\nimport { createPortal } from 'react-dom';\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxMarker from 'mapbox-gl/src/ui/marker';\nimport type LngLat from 'mapbox-gl/src/geo/lng_lat';\nimport type { PointLike } from '@mapbox/point-geometry';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /** Marker content */\n  children: React$Node,\n\n  /** The longitude of the center of the marker. */\n  longitude: number,\n\n  /** The latitude of the center of the marker. */\n  latitude: number,\n\n  /**\n   * The offset in pixels as a `PointLike` object to apply\n   * relative to the element's center. Negatives indicate left and up.\n   */\n  offset?: PointLike,\n\n  /**\n   * Boolean indicating whether or not a marker is able to be dragged\n   * to a new position on the map.\n   */\n  draggable?: boolean,\n\n  /** Fired when the marker is finished being dragged */\n  onDragEnd?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is finished being dragged */\n  onDragStart?: (lngLat: LngLat) => any,\n\n  /** Fired when the marker is dragged */\n  onDrag?: (lngLat: LngLat) => any\n};\n\nclass Marker extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _el: HTMLDivElement;\n\n  _marker: MapboxMarker;\n\n  static displayName = 'Marker';\n\n  static defaultProps = {\n    offset: null,\n    draggable: false\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this._el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    const {\n      longitude,\n      latitude,\n      offset,\n      draggable,\n      onDragEnd,\n      onDragStart,\n      onDrag\n    } = this.props;\n\n    this._marker = new mapboxgl.Marker(this._el, {\n      draggable,\n      offset\n    });\n\n    this._marker.setLngLat([longitude, latitude]).addTo(this._map);\n\n    if (onDragEnd) {\n      this._marker.on('dragend', this._onDragEnd);\n    }\n\n    if (onDragStart) {\n      this._marker.on('dragstart', this._onDragStart);\n    }\n\n    if (onDrag) {\n      this._marker.on('drag', this._onDrag);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const positionChanged =\n      prevProps.latitude !== this.props.latitude ||\n      prevProps.longitude !== this.props.longitude;\n\n    if (positionChanged) {\n      this._marker.setLngLat([this.props.longitude, this.props.latitude]);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._marker.remove();\n  }\n\n  getMarker() {\n    return this._marker;\n  }\n\n  _onDragEnd = (): void => {\n    // $FlowFixMe\n    this.props.onDragEnd(this._marker.getLngLat());\n  };\n\n  _onDragStart = (): void => {\n    // $FlowFixMe\n    this.props.onDragStart(this._marker.getLngLat());\n  };\n\n  _onDrag = (): void => {\n    // $FlowFixMe\n    this.props.onDrag(this._marker.getLngLat());\n  };\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return createPortal(this.props.children, this._el);\n    });\n  }\n}\n\nexport default Marker;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\n\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** Unique id of the feature. */\n  id: string | number,\n\n  /** The Id of the vector source or GeoJSON source for the feature. */\n  source: string,\n\n  /** For vector tile sources, the sourceLayer is required. */\n  sourceLayer: string,\n\n  /** A set of key-value pairs. The values should be valid JSON types. */\n  state: Object\n};\n\n/**\n * A `FeatureState` component sets the state of a feature.\n */\nclass FeatureState extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n    map.setFeatureState({ id, source, sourceLayer }, state);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const map = this._map;\n    const { id, source, sourceLayer, state } = this.props;\n\n    if (\n      id !== prevProps.id ||\n      source !== prevProps.source ||\n      sourceLayer !== prevProps.sourceLayer ||\n      state !== prevProps.state\n    ) {\n      map.removeFeatureState({\n        id: prevProps.id,\n        source: prevProps.source,\n        sourceLayer: prevProps.sourceLayer\n      });\n\n      map.setFeatureState({ id, source, sourceLayer }, state);\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    const { id, source, sourceLayer } = this.props;\n    this._map.removeFeatureState({ id, source, sourceLayer });\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n\n      return null;\n    });\n  }\n}\n\nexport default FeatureState;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxAttributionControl from 'mapbox-gl/src/ui/control/attribution_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * If `true` force a compact attribution that shows the full\n   * attribution on mouse hover, or if  false force the full attribution\n   * control. The default is a responsive attribution that collapses when\n   * the map is less than 640 pixels wide.\n   */\n  compact: boolean,\n\n  /* String or strings to show in addition to any other attributions. */\n  customAttribution: string | Array<string>,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * An `AttributionControl` control presents the map's attribution information.\n */\nclass AttributionControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxAttributionControl;\n\n  static defaultProps = {\n    position: 'bottom-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { compact, customAttribution, position } = this.props;\n\n    const control: MapboxAttributionControl = new mapboxgl.AttributionControl({\n      compact,\n      customAttribution\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default AttributionControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxFullscreenControl from 'mapbox-gl/src/ui/control/fullscreen_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /**\n   * container is the compatible DOM element which should be\n   * made full screen. By default, the map container element\n   * will be made full screen.\n   */\n  container: string,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `FullscreenControl` control contains a button for toggling the map in\n * and out of fullscreen mode.\n */\nclass FullscreenControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxFullscreenControl;\n\n  static defaultProps = {\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { container, position } = this.props;\n\n    const control: MapboxFullscreenControl = new mapboxgl.FullscreenControl({\n      container\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default FullscreenControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxGeolocateControl from 'mapbox-gl/src/ui/control/geolocate_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* A Geolocation API PositionOptions object. */\n  positionOptions: PositionOptions,\n\n  /**\n   * A `fitBounds` options object to use when the map is\n   * panned and zoomed to the user's location.\n   */\n  fitBoundsOptions: Object,\n\n  /**\n   * If `true` the Geolocate Control becomes a toggle button and when active\n   * the map will receive updates to the user's location as it changes.\n   */\n  trackUserLocation: boolean,\n\n  /**\n   * By default a dot will be shown on the map at the user's location.\n   * Set to `false` to disable.\n   */\n  showUserLocation: boolean,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right',\n\n  /**\n   * Fired when the Geolocate Control changes to the background state.\n   */\n  onTrackUserLocationEnd?: Function,\n\n  /**\n   * Fired when the Geolocate Control changes to the active lock state,\n   */\n  onTrackUserLocationStart?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as an error.\n   */\n  onError?: Function,\n\n  /**\n   * Fired on each Geolocation API position update which returned as success.\n   */\n  onGeolocate?: Function\n};\n\n/**\n * A `GeolocateControl` control provides a button that uses the browser's\n * geolocation API to locate the user on the map.\n */\nclass GeolocateControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxGeolocateControl;\n\n  static defaultProps = {\n    positionOptions: { enableHighAccuracy: false, timeout: 6000 },\n    fitBoundsOptions: { maxZoom: 15 },\n    trackUserLocation: false,\n    showUserLocation: true\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation,\n      position,\n      onTrackUserLocationEnd,\n      onTrackUserLocationStart,\n      onError,\n      onGeolocate\n    } = this.props;\n\n    const control: MapboxGeolocateControl = new mapboxgl.GeolocateControl({\n      positionOptions,\n      fitBoundsOptions,\n      trackUserLocation,\n      showUserLocation\n    });\n\n    if (onTrackUserLocationEnd) {\n      control.on('trackuserlocationend', onTrackUserLocationEnd);\n    }\n\n    if (onTrackUserLocationStart) {\n      control.on('trackuserlocationstart', onTrackUserLocationStart);\n    }\n\n    if (onError) {\n      control.on('error', onError);\n    }\n\n    if (onGeolocate) {\n      control.on('geolocate', onGeolocate);\n    }\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default GeolocateControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxNavigationControl from 'mapbox-gl/src/ui/control/navigation_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* If true the compass button is included. */\n  showCompass: boolean,\n\n  /* If true the zoom-in and zoom-out buttons are included. */\n  showZoom: boolean,\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `NavigationControl` control contains zoom buttons and a compass.\n */\nclass NavigationControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxNavigationControl;\n\n  static defaultProps = {\n    position: 'top-right'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { showCompass, showZoom, position } = this.props;\n\n    const control: MapboxNavigationControl = new mapboxgl.NavigationControl({\n      showCompass,\n      showZoom\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default NavigationControl;\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxScaleControl from 'mapbox-gl/src/ui/control/scale_control';\n\nimport MapContext from '../MapContext';\nimport mapboxgl from '../../utils/mapbox-gl';\n\ntype Props = {\n  /* The maximum length of the scale control in pixels. */\n  maxWidth: number,\n\n  /* Unit of the distance. */\n  unit: 'imperial' | 'metric' | 'nautical',\n\n  /* A string representing the position of the control on the map. */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n};\n\n/**\n * A `ScaleControl` control displays the ratio of a distance on the map\n * to the corresponding distance on the ground.\n */\nclass ScaleControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxScaleControl;\n\n  static defaultProps = {\n    position: 'bottom-right',\n    unit: 'metric'\n  };\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const { maxWidth, unit, position } = this.props;\n\n    const control: MapboxScaleControl = new mapboxgl.ScaleControl({\n      maxWidth,\n      unit\n    });\n\n    map.addControl(control, position);\n    this._control = control;\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default ScaleControl;\n","/**\n * Create a new [Mapbox GL JS plugin](https://www.mapbox.com/blog/build-mapbox-gl-js-plugins/) that\n * modifies the layers of the map style to use the 'text-field' that matches the browser language.\n * @constructor\n * @param {object} options - Options to configure the plugin.\n * @param {string[]} [options.supportedLanguages] - List of supported languages\n * @param {Function} [options.languageTransform] - Custom style transformation to apply\n * @param {RegExp} [options.languageField=/^\\{name/] - RegExp to match if a text-field is a language field\n * @param {Function} [options.getLanguageField] - Given a language choose the field in the vector tiles\n * @param {string} [options.languageSource] - Name of the source that contains the different languages.\n * @param {string} [options.defaultLanguage] - Name of the default language to initialize style after loading.\n * @param {string[]} [options.excludedLayerIds] - Name of the layers that should be excluded from translation.\n */\nfunction MapboxLanguage(options) {\n  options = Object.assign({}, options);\n  if (!(this instanceof MapboxLanguage)) {\n    throw new Error('MapboxLanguage needs to be called with the new keyword');\n  }\n\n  this.setLanguage = this.setLanguage.bind(this);\n  this._initialStyleUpdate = this._initialStyleUpdate.bind(this);\n\n  this._defaultLanguage = options.defaultLanguage;\n  this._isLanguageField = options.languageField || /^\\{name/;\n  this._getLanguageField = options.getLanguageField || function nameField(language) {\n    return language === 'mul' ? '{name}' : '{name_' + language + '}';\n  };\n  this._languageSource = options.languageSource || null;\n  this._languageTransform = options.languageTransform || function (style, language) {\n    if (language === 'ar') {\n      return noSpacing(style);\n    } else {\n      return standardSpacing(style);\n    }\n  };\n  this._excludedLayerIds = options.excludedLayerIds || [];\n  this.supportedLanguages = options.supportedLanguages || ['ar', 'en', 'es', 'fr', 'de', 'ja', 'ko', 'mul', 'pt', 'ru', 'zh'];\n}\n\nfunction standardSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    if (layer['source-layer'] === 'state_label') {\n      spacing = 0.15;\n    }\n    if (layer['source-layer'] === 'marine_label') {\n      if (/-lg/.test(layer.id)) {\n        spacing = 0.25;\n      }\n      if (/-md/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-sm/.test(layer.id)) {\n        spacing = 0.1;\n      }\n    }\n    if (layer['source-layer'] === 'place_label') {\n      if (/-suburb/.test(layer.id)) {\n        spacing = 0.15;\n      }\n      if (/-neighbour/.test(layer.id)) {\n        spacing = 0.1;\n      }\n      if (/-islet/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'airport_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'rail_station_label') {\n      spacing = 0.01;\n    }\n    if (layer['source-layer'] === 'poi_label') {\n      if (/-scalerank/.test(layer.id)) {\n        spacing = 0.01;\n      }\n    }\n    if (layer['source-layer'] === 'road_label') {\n      if (/-label-/.test(layer.id)) {\n        spacing = 0.01;\n      }\n      if (/-shields/.test(layer.id)) {\n        spacing = 0.05;\n      }\n    }\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction noSpacing(style) {\n  var changedLayers = style.layers.map(function (layer) {\n    if (!(layer.layout || {})['text-field']) return layer;\n    var spacing = 0;\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-letter-spacing': spacing\n      })\n    });\n  });\n\n  return Object.assign({}, style, {\n    layers: changedLayers\n  });\n}\n\nfunction isNameStringField(isLangField, property) {\n  return typeof property === 'string' && isLangField.test(property);\n}\n\nfunction isNameFunctionField(isLangField, property) {\n  return property.stops && property.stops.filter(function (stop) {\n    return isLangField.test(stop[1]);\n  }).length > 0;\n}\n\nfunction adaptPropertyLanguage(isLangField, property, languageFieldName) {\n  if (isNameStringField(isLangField, property)) return languageFieldName;\n  if (isNameFunctionField(isLangField, property)) {\n    var newStops = property.stops.map(function (stop) {\n      if (isLangField.test(stop[1])) {\n        return [stop[0], languageFieldName];\n      }\n      return stop;\n    });\n    return Object.assign({}, property, {\n      stops: newStops\n    });\n  }\n  return property;\n}\n\nfunction changeLayerTextProperty(isLangField, layer, languageFieldName, excludedLayerIds) {\n  if (layer.layout && layer.layout['text-field'] && excludedLayerIds.indexOf(layer.id) === -1) {\n    return Object.assign({}, layer, {\n      layout: Object.assign({}, layer.layout, {\n        'text-field': adaptPropertyLanguage(isLangField, layer.layout['text-field'], languageFieldName)\n      })\n    });\n  }\n  return layer;\n}\n\nfunction findStreetsSource(style) {\n  var sources = Object.keys(style.sources).filter(function (sourceName) {\n    var source = style.sources[sourceName];\n    return /mapbox-streets-v\\d/.test(source.url);\n  });\n  return sources[0];\n}\n\n/**\n * Explicitly change the language for a style.\n * @param {object} style - Mapbox GL style to modify\n * @param {string} language - The language iso code\n * @returns {object} the modified style\n */\nMapboxLanguage.prototype.setLanguage = function (style, language) {\n  if (this.supportedLanguages.indexOf(language) < 0) throw new Error('Language ' + language + ' is not supported');\n  var streetsSource = this._languageSource || findStreetsSource(style);\n  if (!streetsSource) return style;\n\n  var field = this._getLanguageField(language);\n  var isLangField = this._isLanguageField;\n  var excludedLayerIds = this._excludedLayerIds;\n  var changedLayers = style.layers.map(function (layer) {\n    if (layer.source === streetsSource) return changeLayerTextProperty(isLangField, layer, field, excludedLayerIds);\n    return layer;\n  });\n\n  var languageStyle = Object.assign({}, style, {\n    layers: changedLayers\n  });\n\n  return this._languageTransform(languageStyle, language);\n};\n\nMapboxLanguage.prototype._initialStyleUpdate = function () {\n  var style = this._map.getStyle();\n  var language = this._defaultLanguage || browserLanguage(this.supportedLanguages);\n\n  // We only update the style once\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map.setStyle(this.setLanguage(style, language));\n};\n\nfunction browserLanguage(supportedLanguages) {\n  var language = navigator.languages ? navigator.languages[0] : (navigator.language || navigator.userLanguage);\n  var parts = language.split('-');\n  var languageCode = language;\n  if (parts.length > 1) {\n    languageCode = parts[0];\n  }\n  if (supportedLanguages.indexOf(languageCode) > -1) {\n    return languageCode;\n  }\n  return null;\n}\n\nMapboxLanguage.prototype.onAdd = function (map) {\n  this._map = map;\n  this._map.on('styledata', this._initialStyleUpdate);\n  this._container = document.createElement('div');\n  return this._container;\n};\n\nMapboxLanguage.prototype.onRemove = function () {\n  this._map.off('styledata', this._initialStyleUpdate);\n  this._map = undefined;\n};\n\nfunction ie11Polyfill() {\n  if (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, 'assign', {\n      // eslint-disable-next-line no-unused-vars\n      value: function assign(target, varArgs) { // .length of function is 2\n        // eslint-disable-next-line strict\n        'use strict';\n        if (target === null) { // TypeError if undefined or null\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        var to = Object(target);\n\n        for (var index = 1; index < arguments.length; index++) {\n          var nextSource = arguments[index];\n\n          if (nextSource !== null) { // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n              // Avoid bugs when hasOwnProperty is shadowed\n              if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                to[nextKey] = nextSource[nextKey];\n              }\n            }\n          }\n        }\n        return to;\n      },\n      writable: true,\n      configurable: true\n    });\n  }\n}\n\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n  module.exports = MapboxLanguage;\n} else {\n  ie11Polyfill();\n  window.MapboxLanguage = MapboxLanguage;\n}\n","// @flow\n\nimport { PureComponent, createElement } from 'react';\nimport type MapboxMap from 'mapbox-gl/src/ui/map';\nimport type MapboxLanguageControl from '@mapbox/mapbox-gl-language/index';\n\nimport MapboxLanguage from '@mapbox/mapbox-gl-language';\nimport MapContext from '../MapContext';\n\ntype Props = {\n  /** List of supported languages */\n  supportedLanguages?: string[],\n\n  /** Custom style transformation to apply */\n  languageTransform?: Function,\n\n  /**\n   * RegExp to match if a text-field is a language field\n   * (optional, default /^\\{name/)\n   */\n  languageField?: RegExp,\n\n  /** Given a language choose the field in the vector tiles */\n  getLanguageField?: Function,\n\n  /** Name of the source that contains the different languages. */\n  languageSource?: string,\n\n  /** Name of the default language to initialize style after loading. */\n  defaultLanguage?: string,\n\n  /** Name of the language to set */\n  language?: string\n};\n\n/**\n * Adds support for switching the language of your map style.\n */\nclass LanguageControl extends PureComponent<Props> {\n  _map: MapboxMap;\n\n  _control: MapboxLanguageControl;\n\n  static defaultProps = {};\n\n  componentDidMount() {\n    const map: MapboxMap = this._map;\n    const {\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    } = this.props;\n\n    const control: MapboxLanguageControl = new MapboxLanguage({\n      supportedLanguages,\n      languageTransform,\n      languageField,\n      getLanguageField,\n      languageSource,\n      defaultLanguage\n    });\n\n    map.addControl(control);\n    this._control = control;\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.language !== this.props.language) {\n      this._setLanguage();\n    }\n  }\n\n  componentWillUnmount() {\n    if (!this._map || !this._map.getStyle()) {\n      return;\n    }\n\n    this._map.removeControl(this._control);\n  }\n\n  _setLanguage = () => {\n    const { language } = this.props;\n    const map = this._map;\n    const control = this._control;\n\n    if (language) {\n      map.setStyle(control.setLanguage(map.getStyle(), language));\n    }\n  };\n\n  getControl() {\n    return this._control;\n  }\n\n  render() {\n    return createElement(MapContext.Consumer, {}, (map) => {\n      if (map) {\n        this._map = map;\n      }\n      return null;\n    });\n  }\n}\n\nexport default LanguageControl;\n"],"names":["MapContext","createContext","isBrowser","Object","prototype","toString","call","global","process","browser","mapboxgl","require","events","diff","newProps","prevProps","keys","Set","_toConsumableArray","reduce","acc","key","value","push","queryRenderedFeatures","map","layerId","position","radius","parameters","layers","bbox","eventListeners","Layer","props","event","point","x","y","features","_this","_map","_id","onClick","onHover","onEnter","onLeave","id","componentDidMount","this","before","layer","getLayer","addLayer","on","_onClick","_onHover","_onEnter","_onLeave","componentDidUpdate","moveLayer","paint","forEach","setPaintProperty","_this2","layout","setLayoutProperty","filter","setFilter","undefined","propName","eventName","handlerName","off","componentWillUnmount","getStyle","_this3","removeLayer","render","createElement","Consumer","_this4","PureComponent","CustomLayer","getLayerId","child","type","normalizeChildren","children","Children","toArray","Boolean","index","previousLayerIndex","currentLayerId","previousLayer","previousLayerWithBefore","cloneElement","capitalizeFirstLetter","string","charAt","toUpperCase","slice","module","jumpTo","easeTo","flyTo","MapGL","loaded","originalEvent","getCenter","lng","viewport","latitude","lat","longitude","zoom","getZoom","pitch","getPitch","bearing","getBearing","onViewportChange","accessToken","_container","createRef","container","current","Map","style","mapStyle","interactive","center","minZoom","maxZoom","hash","bearingSnap","pitchWithRotate","attributionControl","logoPosition","failIfMajorPerformanceCaveat","preserveDrawingBuffer","refreshExpiredTiles","maxBounds","scrollZoom","boxZoom","dragRotate","dragPan","keyboard","doubleClickZoom","trackResize","renderWorldCopies","maxTileCacheSize","localIdeographFontFamily","transformRequest","collectResourceTiming","setState","once","onLoad","_onViewportChange","cursorStyle","getCanvas","cursor","_updateMapViewport","_updateMapStyle","remove","getMap","newMapStyle","prevMapStyle","setStyle","viewportChangeMethod","options","viewportChangeOptions","Error","state","className","Provider","ref","Source","isSourceLoaded","_onSourceData","prevSource","newSource","data","getSource","setData","source","_tileJSONRequest","cancel","url","scheme","_options","sourceCache","sourceCaches","clearTiles","load","removeSource","validateSource","addSource","prevId","_updateVectorSource","_updateGeoJSONSource","_removeSource","Popup","_el","document","offset","closeButton","closeOnClick","onClose","anchor","_popup","setDOMContent","setLngLat","addTo","getPopup","createPortal","Marker","onDragEnd","_marker","getLngLat","onDragStart","onDrag","draggable","_onDragEnd","_onDragStart","_onDrag","getMarker","FeatureState","sourceLayer","setFeatureState","removeFeatureState","AttributionControl","compact","customAttribution","control","addControl","_control","removeControl","getControl","FullscreenControl","GeolocateControl","positionOptions","fitBoundsOptions","trackUserLocation","showUserLocation","onTrackUserLocationEnd","onTrackUserLocationStart","onError","onGeolocate","enableHighAccuracy","timeout","NavigationControl","showCompass","showZoom","ScaleControl","maxWidth","unit","MapboxLanguage","assign","setLanguage","bind","_initialStyleUpdate","_defaultLanguage","defaultLanguage","_isLanguageField","languageField","_getLanguageField","getLanguageField","language","_languageSource","languageSource","_languageTransform","languageTransform","changedLayers","noSpacing","spacing","test","standardSpacing","_excludedLayerIds","excludedLayerIds","supportedLanguages","adaptPropertyLanguage","isLangField","property","languageFieldName","isNameStringField","stops","stop","length","isNameFunctionField","newStops","indexOf","streetsSource","sources","sourceName","findStreetsSource","field","changeLayerTextProperty","languageStyle","navigator","languages","userLanguage","parts","split","languageCode","browserLanguage","onAdd","onRemove","LanguageControl","_setLanguage"],"mappings":"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"}