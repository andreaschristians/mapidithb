{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\OneDrive\\\\Magang\\\\MAPID\\\\Pricilia\\\\bus-route-mapgl\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport MapGL, { Source, Layer, NavigationControl, GeolocateControl } from '@urbica/react-map-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './App.css';\nimport { center } from '@turf/turf';\nimport bus_list from './bus_list.json';\nimport Draw from '@urbica/react-map-gl-draw';\nimport { Label } from 'semantic-ui-react';\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      viewport: {\n        latitude: 51.0486,\n        longitude: -114.0708,\n        zoom: 11\n      },\n      mapColor: 'mapbox://styles/mapbox/streets-v11',\n      selected_bus: 1,\n      dataGeo: null,\n      turfCenter: null,\n      turfCoord: null\n    };\n    this.handleSelect = this.handleSelect.bind(this);\n    this.radioChange = this.radioChange.bind(this);\n  }\n\n  radioChange(e) {\n    console.log(e.currentTarget.value);\n    this.setState({\n      mapColor: e.currentTarget.value\n    });\n  }\n\n  handleSelect(e) {\n    let selection = e.target.value;\n    this.setState({\n      selected_bus: selection\n    });\n    let geojson = 'https://data.calgary.ca/resource/hpnd-riq4.geojson?route_short_name=' + this.state.selected_bus;\n    fetch(geojson).then(response => response.json());\n    this.setState({\n      dataGeo: geojson\n    }); // this.setState({turfCenter: center(dataGeo)});\n    // this.setState({turfCoord: turfCenter.geometry.coordinates});\n    // this.setState({viewport: turfCoord});\n  }\n\n  render() {\n    const selectStyle = {\n      display: \"inline-block\",\n      zIndex: 999,\n      position: \"absolute\",\n      height: \"40px\",\n      width: \"450px\",\n      padding: \"10px\",\n      top: \"60px\",\n      left: \"5px\",\n      fontSize: \"17px\",\n      border: \"none\",\n      borderRadius: \"3px\",\n      color: \"#fff\",\n      background: \"#6d6d6d\",\n      fontStyle: \"bold\",\n      outline: \"none\"\n    };\n    const radioStyle = {\n      zIndex: 999,\n      position: \"absolute\",\n      background: '#fff',\n      padding: '10px',\n      borderRadius: '10px',\n      top: '10px',\n      left: '5px',\n      float: 'right'\n    };\n    let items = bus_list.map(bus => React.createElement(\"option\", {\n      key: bus.route_short_name,\n      value: bus.route_short_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, bus.route_short_name + \" - \" + bus.route_long_name));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"select\", {\n      onChange: this.handleSelect,\n      value: this.state.value,\n      style: selectStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, items), React.createElement(\"div\", {\n      id: \"menu\",\n      style: radioStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"streets-v11\",\n      type: \"radio\",\n      name: \"rtoggle\",\n      value: \"mapbox://styles/mapbox/streets-v11\",\n      onChange: this.radioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"streets\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"streets\"), React.createElement(\"input\", {\n      id: \"light-v10\",\n      type: \"radio\",\n      name: \"rtoggle\",\n      value: \"mapbox://styles/mapbox/light-v10\",\n      onChange: this.radioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"light\"), React.createElement(\"input\", {\n      id: \"dark-v10\",\n      type: \"radio\",\n      name: \"rtoggle\",\n      value: \"mapbox://styles/mapbox/dark-v10\",\n      onChange: this.radioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"dark\"), React.createElement(\"input\", {\n      id: \"outdoors-v11\",\n      type: \"radio\",\n      name: \"rtoggle\",\n      value: \"mapbox://styles/mapbox/outdoors-v11\",\n      onChange: this.radioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"outdoors\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"outdoors\"), React.createElement(\"input\", {\n      id: \"satellite-v9\",\n      type: \"radio\",\n      name: \"rtoggle\",\n      value: \"mapbox://styles/mapbox/satellite-v9\",\n      onChange: this.radioChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Label, {\n      for: \"satellite\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"satellite\")), React.createElement(MapGL, {\n      style: {\n        width: '100%',\n        height: '650px'\n      },\n      mapStyle: this.state.mapColor,\n      accessToken: 'pk.eyJ1IjoiY2h5cHJpY2lsaWEiLCJhIjoiY2p2dXpnODFkM3F6OTQzcGJjYWgyYmIydCJ9.h_AlGKNQW-TtUVF-856lSA',\n      latitude: this.state.viewport.latitude,\n      longitude: this.state.viewport.longitude,\n      zoom: this.state.viewport.zoom,\n      onViewportChange: viewport => this.setState({\n        viewport\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Source, {\n      id: \"route\",\n      type: \"geojson\",\n      data: this.state.dataGeo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(Layer, {\n      id: \"route\",\n      type: \"line\",\n      source: \"route\",\n      layout: {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      paint: {\n        'line-color': '#888',\n        'line-width': 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(GeolocateControl, {\n      position: \"top-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(NavigationControl, {\n      showCompass: true,\n      showZoom: true,\n      position: \"top-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(Draw, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\andre\\OneDrive\\Magang\\MAPID\\Pricilia\\bus-route-mapgl\\src\\App.js"],"names":["React","Component","MapGL","Source","Layer","NavigationControl","GeolocateControl","center","bus_list","Draw","Label","App","constructor","state","viewport","latitude","longitude","zoom","mapColor","selected_bus","dataGeo","turfCenter","turfCoord","handleSelect","bind","radioChange","e","console","log","currentTarget","value","setState","selection","target","geojson","fetch","then","response","json","render","selectStyle","display","zIndex","position","height","width","padding","top","left","fontSize","border","borderRadius","color","background","fontStyle","outline","radioStyle","float","items","map","bus","route_short_name","route_long_name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport MapGL, { Source, Layer, NavigationControl, GeolocateControl } from '@urbica/react-map-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './App.css';\r\nimport { center } from '@turf/turf';\r\nimport bus_list from './bus_list.json';\r\nimport Draw from '@urbica/react-map-gl-draw';\r\nimport { Label } from 'semantic-ui-react';\r\nimport '@mapbox/mapbox-gl-draw/dist/mapbox-gl-draw.css';\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      viewport: {\r\n        latitude: 51.0486,\r\n        longitude: -114.0708,\r\n        zoom: 11\r\n      },\r\n      mapColor: 'mapbox://styles/mapbox/streets-v11',\r\n      selected_bus: 1,\r\n      dataGeo: null,\r\n      turfCenter: null,\r\n      turfCoord: null\r\n    };\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.radioChange = this.radioChange.bind(this);\r\n  }\r\n\r\n  radioChange(e) {\r\n    console.log(e.currentTarget.value);\r\n    this.setState({\r\n      mapColor: e.currentTarget.value\r\n    });\r\n  }\r\n\r\n  handleSelect(e) {\r\n    let selection = e.target.value;\r\n    this.setState({selected_bus: selection});\r\n\r\n    let geojson = 'https://data.calgary.ca/resource/hpnd-riq4.geojson?route_short_name='+ this.state.selected_bus;\r\n\r\n    fetch(geojson).then(response => response.json());\r\n    this.setState({dataGeo: geojson});\r\n\r\n    // this.setState({turfCenter: center(dataGeo)});\r\n    // this.setState({turfCoord: turfCenter.geometry.coordinates});\r\n\r\n    // this.setState({viewport: turfCoord});\r\n  }\r\n\r\n  render() {\r\n    const selectStyle = {\r\n      display: \"inline-block\", \r\n      zIndex: 999,\r\n      position: \"absolute\", \r\n      height: \"40px\",\r\n      width:\"450px\",\r\n      padding: \"10px\",\r\n      top:\"60px\", \r\n      left:\"5px\", \r\n      fontSize:\"17px\",\r\n      border: \"none\",\r\n      borderRadius: \"3px\",\r\n      color: \"#fff\",\r\n      background: \"#6d6d6d\", \r\n      fontStyle:\"bold\", outline:\"none\"\r\n    };\r\n\r\n    const radioStyle = {\r\n      zIndex: 999,\r\n      position: \"absolute\",\r\n      background: '#fff',\r\n      padding: '10px',\r\n      borderRadius: '10px',\r\n      top: '10px',\r\n      left: '5px',\r\n      float: 'right'\r\n    };\r\n\r\n    let items = bus_list.map((bus) => \r\n    <option key={bus.route_short_name} value={bus.route_short_name}>{bus.route_short_name+\" - \"+bus.route_long_name}</option>); \r\n    \r\n    return(\r\n      <div>\r\n        <select \r\n          onChange={this.handleSelect} \r\n          value={this.state.value}  \r\n          style={selectStyle}>\r\n          {items}\r\n        </select>\r\n\r\n        <div id ='menu' style={radioStyle} >\r\n          <input id='streets-v11' type='radio' name='rtoggle' value='mapbox://styles/mapbox/streets-v11' onChange={this.radioChange}/>\r\n          <Label for='streets'>streets</Label>\r\n          <input id='light-v10' type='radio' name='rtoggle' value='mapbox://styles/mapbox/light-v10' onChange={this.radioChange}/>\r\n          <Label for='light'>light</Label>\r\n          <input id='dark-v10' type='radio' name='rtoggle' value='mapbox://styles/mapbox/dark-v10' onChange={this.radioChange}/>\r\n          <Label for='dark'>dark</Label>\r\n          <input id='outdoors-v11' type='radio' name='rtoggle' value='mapbox://styles/mapbox/outdoors-v11' onChange={this.radioChange}/>\r\n          <Label for='outdoors'>outdoors</Label>\r\n          <input id='satellite-v9' type='radio' name='rtoggle' value='mapbox://styles/mapbox/satellite-v9' onChange={this.radioChange}/>\r\n          <Label for='satellite'>satellite</Label>\r\n        </div>\r\n\r\n        <MapGL\r\n          style = {{ width: '100%', height: '650px' }}\r\n          mapStyle = {this.state.mapColor}\r\n          accessToken={'pk.eyJ1IjoiY2h5cHJpY2lsaWEiLCJhIjoiY2p2dXpnODFkM3F6OTQzcGJjYWgyYmIydCJ9.h_AlGKNQW-TtUVF-856lSA'}\r\n          \r\n          latitude = {this.state.viewport.latitude}\r\n          longitude = {this.state.viewport.longitude}\r\n          zoom = {this.state.viewport.zoom}\r\n          onViewportChange = {viewport => this.setState({ viewport })}\r\n        >\r\n          \r\n          <Source id='route' type='geojson' data={this.state.dataGeo} />\r\n          <Layer\r\n            id='route'\r\n            type='line'\r\n            source='route'\r\n            layout={{\r\n              'line-join': 'round',\r\n              'line-cap': 'round'\r\n            }}\r\n            paint={{\r\n              'line-color': '#888',\r\n              'line-width': 8\r\n            }}\r\n          />\r\n          <GeolocateControl position='top-right' />\r\n          <NavigationControl showCompass showZoom position='top-right' />\r\n\r\n          <Draw/>\r\n        </MapGL> \r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}